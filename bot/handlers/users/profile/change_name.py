from aiogram import Bot, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from services.user_service import UserService

from helpers.fabrics import MenuCallback
from helpers.keyboards import markups
from helpers.functions import render_profile
from handlers.routers import user_router


class ChangeName(StatesGroup):
    new_name = State()
    confirm = State()


@user_router.callback_query(MenuCallback.filter(F.action == 'edit_name'))
async def change_name(callback: CallbackQuery, bot: Bot, state: FSMContext):
    await callback.message.answer('–í–≤–µ–¥–∏ –∏–º—è –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—å –ê–ª–∏—Å–∞:')
    await state.set_state(ChangeName.new_name)
    await bot.answer_callback_query(callback.id)

@user_router.message(ChangeName.new_name)
async def get_name(message: Message, bot: Bot, state: FSMContext):
    new_name = message.text
    await message.answer(f'–¢—ã –≤–≤—ë–ª <code>{new_name}</code>, –∑–∞–ø–∏—Å—ã–≤–∞—é?', reply_markup=markups.confirm())
    await state.update_data(new_name=new_name)
    await state.set_state(ChangeName.confirm)

@user_router.message(ChangeName.confirm)
async def get_confirm(message: Message, state: FSMContext, bot: Bot):
    new_name = (await state.get_data())['new_name']
    if message.text.lower() == '–¥–∞':
        is_exist, user = await UserService.exist(user_id=message.from_user.id)
        # user = await UserService.getByUserId(message.from_user.id)
        # await UserService.update(user['id'], {'name': 'new_name'})
        # await render_profile(message, markups.menu(), user)
        await message.answer('üëå')
        await render_profile(message, markups.profile_menu(), user)
        await state.clear()
    elif message.text.lower() == '–Ω–µ—Ç':
        await message.answer('–í–≤–µ–¥–∏ –µ—â—ë —Ä–∞–∑')
        await state.set_state(ChangeName.new_name)
    else:
        await message.answer('–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª')
