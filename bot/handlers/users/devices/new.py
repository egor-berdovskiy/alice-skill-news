from aiogram import Bot, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from helpers.keyboards import markups
from helpers.fabrics import DeviceCallback
from helpers.functions.word_generator import WordGenerator

from services.session_service import SessionService

from handlers.routers import user_router


class LinkDevice(StatesGroup):
    confirm = State()


async def create_session(message: Message, user_id: int):
    secret_word = WordGenerator.generate()
    is_exist, session = await SessionService.check(message.from_user.id)
    
    if is_exist:
        await message.answer('–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–≤—è–∑—ã–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ üôÑ', reply_markup=markups.cancel_all_sessions())
        return
    else:
        await SessionService.create(user_id=user_id, secret=secret_word)
        await message.answer('–í–æ—Ç —Ç–≤–æ—è —Å–µ–∫—Ä–µ—Ç–Ω–∞—è —Ñ—Ä–∞–∑–∞, –æ–Ω–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 3 –º–∏–Ω—É—Ç—ã üîó')
        await message.answer(f'<code>{secret_word}</code>')
        



@user_router.callback_query(DeviceCallback.filter(F.action == 'new'))
async def new_device(callback: CallbackQuery, bot: Bot, state: FSMContext):
    await callback.message.answer('–ö–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å —É–º–Ω—ã–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º\n1. –°–∫–∞–∂–∏ ‚Äî –ê–ª–∏—Å–∞, –∑–∞–ø—É—Å—Ç–∏ –Ω–∞–≤—ã–∫ ¬´–ù–æ–≤–æ—Å—Ç–∏ –∏–∑ –¢–µ–ª–µ–≥—Ä–∞–º¬ª.\n2. –ó–∞—Ç–µ–º ‚Äî –ê–ª–∏—Å–∞, —Å–≤—è–∑–∞—Ç—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞.\n4. –ê–ª–∏—Å–∞ –ø–æ–ø—Ä–æ—Å–∏—Ç —Å–µ–∫—Ä–µ—Ç–Ω—É—é —Ñ—Ä–∞–∑—É, –∫–æ—Ç–æ—Ä—É—é —è —Ç–µ–±–µ —Å–∫–∞–∂—É –¥–∞–ª–µ–µ\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º?', reply_markup=markups.confirm())
    await state.set_state(LinkDevice.confirm)
    await bot.answer_callback_query(callback.id)


@user_router.message(LinkDevice.confirm)
async def get_confirm(message: Message, bot: Bot, state: FSMContext):
    if message.text.lower() == '–¥–∞':
        await create_session(message, message.from_user.id)
        await state.clear()
    elif message.text.lower() == '–Ω–µ—Ç':
        await message.answer('üëå')
        await state.clear()
    else:
        await message.answer('–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª ü§®')
